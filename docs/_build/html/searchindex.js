Search.setIndex({"docnames": ["application", "index", "main", "models", "models.exception", "models.node", "models.node.generator", "models.node.generator.file", "models.node.output", "models.node.output.device", "models.node.output.device.serial", "models.node.output.display", "models.node.output.file", "models.node.processing", "models.node.processing.encoder", "models.node.processing.feature_extractor", "models.node.processing.filter", "models.node.processing.segmenter", "models.node.processing.trainable", "models.node.processing.trainable.classifier", "models.node.processing.trainable.feature_extractor", "models.utils", "modules"], "filenames": ["application.rst", "index.rst", "main.rst", "models.rst", "models.exception.rst", "models.node.rst", "models.node.generator.rst", "models.node.generator.file.rst", "models.node.output.rst", "models.node.output.device.rst", "models.node.output.device.serial.rst", "models.node.output.display.rst", "models.node.output.file.rst", "models.node.processing.rst", "models.node.processing.encoder.rst", "models.node.processing.feature_extractor.rst", "models.node.processing.filter.rst", "models.node.processing.segmenter.rst", "models.node.processing.trainable.rst", "models.node.processing.trainable.classifier.rst", "models.node.processing.trainable.feature_extractor.rst", "models.utils.rst", "modules.rst"], "titles": ["application module", "Welcome to Open_BCI_Framework\u2019s documentation!", "main module", "models package", "models.exception package", "models.node package", "models.node.generator package", "models.node.generator.file package", "models.node.output package", "models.node.output.device package", "models.node.output.device.serial package", "models.node.output.display package", "models.node.output.file package", "models.node.processing package", "models.node.processing.encoder package", "models.node.processing.feature_extractor package", "models.node.processing.filter package", "models.node.processing.segmenter package", "models.node.processing.trainable package", "models.node.processing.trainable.classifier package", "models.node.processing.trainable.feature_extractor package", "models.utils package", "OpenBCI_Python_Framework"], "terms": {"class": [0, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "base": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "object": [0, 3, 5, 7, 18, 21], "dispos": [0, 1, 3, 5, 6, 7, 8, 10, 11, 12, 13, 22], "static": 0, "get_generator_node_from_module_and_typ": [0, 1, 22], "str": [0, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "node_typ": 0, "generatornod": [0, 1, 5, 6], "get_node_from_module_and_typ": [0, 1, 22], "node": [0, 1, 3, 21, 22], "run": [0, 1, 3, 5, 6, 13, 22], "openbci_python_framework": 1, "applic": [1, 17, 22], "modul": [1, 22], "main": [1, 5, 7, 10, 11, 12, 13, 14, 16, 17, 18, 22], "model": [1, 22], "packag": [1, 22], "subpackag": [1, 22], "except": [1, 3, 6, 22], "submodul": [1, 22], "framework_base_except": [1, 3, 22], "frameworkbaseexcept": [1, 3, 4], "invalid_parameter_valu": [1, 3, 22], "invalidparametervalu": [1, 3, 4], "missing_paramet": [1, 3, 22], "missingparametererror": [1, 3, 4, 6, 13, 21], "non_compatible_data": [1, 3, 22], "noncompatibledata": [1, 3, 4], "gener": [1, 3, 5, 18, 21], "file": [1, 5, 6, 8, 13, 18, 21], "csvfile": [1, 5, 6, 8], "csvfilearrai": [1, 5, 6], "generator_nod": [1, 3, 5], "motorimageri": [1, 3, 5], "output_mark": [1, 5, 6], "output_timestamp": [1, 5, 6, 7], "from_config_json": [1, 3, 5, 6, 13, 15, 18, 21], "start": [1, 2, 3, 5, 6, 14, 21, 22], "stop": [1, 2, 5, 6, 10, 22], "openbciboard": [1, 3, 5], "output_acceleromet": [1, 5, 6], "output_eeg": [1, 5, 6], "single_run_generator_nod": [1, 3, 5], "singlerungeneratornod": [1, 5, 6, 7], "output": [1, 3, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19, 20], "devic": [1, 5, 6, 8], "eletroestimuladordopaulo": [1, 5, 8], "displai": [1, 5, 8], "simplegraph": [1, 5, 8], "writeedf": [1, 5, 8], "output_nod": [1, 3, 5], "outputnod": [1, 5, 8, 10, 11, 12], "process": [1, 3, 5, 6, 7, 12], "fill": [1, 3, 5, 17], "fill_type_sample_and_hold": [1, 5, 13], "fill_type_zerofil": [1, 5, 13], "input_main": [1, 5, 8, 10, 11, 12, 13, 14, 16, 17], "output_main": [1, 5, 6, 7, 13, 14, 16, 17, 18], "merg": [1, 3, 5], "output_merged_main": [1, 5, 13], "output_merged_timestamp": [1, 5, 13], "random": [1, 5, 6, 13, 21], "processing_nod": [1, 3, 5], "processingnod": [1, 5, 13, 14, 15, 16, 17, 18], "signalcheck": [1, 3, 5], "synchron": [1, 3, 5], "input_master_main": [1, 5, 13], "input_master_timestamp": [1, 5, 13], "input_slave_main": [1, 5, 13], "input_slave_timestamp": [1, 5, 13], "output_synchronized_main": [1, 5, 13], "add_child": [1, 3, 5], "check_input": [1, 3, 5], "check_output": [1, 3, 5], "dispose_al": [1, 3, 5], "module_nam": [1, 3, 5], "print": [1, 3, 5, 6, 12, 21], "util": [1, 3, 22], "cue": [1, 3, 6, 22], "execut": [1, 3, 6, 7, 13, 21], "durat": [1, 3, 6, 22], "get_dur": [1, 3, 21], "script_execut": [1, 3, 22], "trial": [1, 3, 6, 22], "on_stop": [1, 3, 21], "framework_data": [1, 22], "frameworkdata": [1, 3, 5, 6, 7, 13, 17, 22], "extend": [1, 3, 13, 18, 19, 22], "from_multi_channel": [1, 3, 22], "from_single_channel": [1, 3, 22], "get_channels_as_set": [1, 3, 22], "get_data": [1, 3, 22], "get_data_as_2d_arrai": [1, 3, 22], "get_data_at_index": [1, 3, 22], "get_data_count": [1, 3, 22], "get_data_on_channel": [1, 3, 22], "get_data_single_channel": [1, 3, 10, 22], "has_data": [1, 3, 22], "input_2d_data": [1, 3, 22], "input_data_on_channel": [1, 3, 22], "is_1d": [1, 3, 22], "index": [1, 3, 14], "search": 1, "page": 1, "sampling_frequency_hz": 3, "float": [3, 6, 7, 16, 21], "none": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], "channel": [3, 5, 7, 13, 14, 17], "list": [3, 6, 7, 13, 17], "thi": [3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "i": [3, 4, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "us": [3, 4, 5, 6, 7, 8, 10, 13, 17, 18, 19, 20, 21], "store": [3, 7], "data": [3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "format": 3, "compat": [3, 4, 6, 18], "framework": [3, 4, 6, 18], "It": [3, 6, 7, 8, 13, 16, 17, 18, 19, 21], "train": [3, 17, 18, 19, 20], "test": [3, 6], "also": [3, 13], "predict": 3, "make": [3, 18], "evalu": [3, 10], "afadsojnvsdjf": [], "arg": 4, "option": [3, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20], "The": [3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "sampl": [3, 5, 7, 11, 13, 17, 18, 19, 20], "frequenc": [3, 7, 16, 17], "default": [3, 6, 10], "name": [3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "rais": [3, 6, 13, 21], "when": [3, 4, 6, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "being": 3, "input": [3, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "alreadi": 3, "return": [3, 5, 6, 13, 17, 18, 21], "A": [3, 6, 13, 14, 15, 16, 17, 18, 20, 21], "can": [5, 6, 7, 13, 16, 17, 18, 19, 20, 21], "method": [3, 6, 10, 12, 13, 16, 17, 18, 19, 20, 21], "check": [3, 6], "ensur": 3, "If": [3, 6, 7, 13, 17], "an": [3, 6, 10, 13, 18], "classmethod": [3, 5, 6, 15, 18, 21], "creat": [3, 6, 12, 16, 18, 21], "from": [3, 5, 6, 7, 10, 13, 15, 19, 21], "multipl": [3, 6, 7, 18], "class_data": [], "contain": [3, 6, 7, 13, 21], "wa": [3, 21], "singl": [3, 6, 14], "get": [3, 6], "set": [3, 18, 19, 20], "have": [3, 6, 13, 18], "been": 3, "ar": [3, 6, 10, 13, 14, 18, 21], "channels_set": [], "dict": [0, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "all": [3, 4, 5, 6, 8, 15, 16, 17, 18, 19, 20], "2d": 3, "arrai": 3, "each": [3, 6, 14, 17], "return_valu": [], "int": [3, 6, 13, 17, 18, 19, 20, 21], "specif": [3, 6, 21], "basic": [3, 6], "specifi": [3, 13, 18], "time": [3, 6], "step": 3, "you": [3, 6, 7, 17, 21], "want": [3, 6, 7, 21], "number": [3, 6, 14, 20, 21], "point": [3, 13], "normal": [3, 17], "we": [3, 6], "onli": [3, 10, 18, 19, 20], "first": [3, 6], "length": [3, 14], "becaus": [3, 17], "same": [3, 6, 14, 17], "0": [3, 6, 10, 13, 14], "data_count": [], "sinc": 3, "bool": [3, 6, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20], "ha": [3, 17, 18], "ani": [3, 13, 21], "true": [3, 6, 7, 10, 13, 18, 19, 20], "fals": [3, 13], "otherwis": [3, 13], "onto": 3, "one": [3, 7, 10, 14], "exception_typ": 4, "paramet": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "caus": 4, "invalid": 4, "valu": [4, 6, 17, 21], "miss": [4, 13], "non": [4, 6], "expect": [4, 17], "output_nam": 5, "input_nam": [5, 6, 13], "add": [5, 15], "new": [5, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21], "child": [5, 20], "dictionari": [5, 6, 7, 21], "current": [5, 6, 7, 10, 11, 12, 13], "kei": [3, 5], "abstract": [5, 10, 13, 17, 18, 19], "self": [5, 6, 7, 8, 10, 11, 12, 13], "implement": [5, 6, 7, 10, 11, 12, 13, 17, 18, 19, 20], "alloc": [5, 6, 7, 8, 10, 11, 12, 13], "resourc": [5, 6, 7, 8, 10, 11, 12, 13], "itself": [5, 16, 17], "its": [5, 6, 7, 13], "children": 5, "instanc": [5, 6, 11, 12, 13, 15, 18, 21], "given": [3, 5, 16], "form": 5, "properti": [5, 13], "messag": [5, 10], "function": [5, 6, 21], "x": [5, 13], "take": 5, "final": [6, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19], "marker": 6, "timestamp": [6, 7, 13], "acceleromet": 6, "eeg": [6, 17, 20], "sample_and_hold": 13, "zero_fil": 13, "merged_main": 13, "merged_timestamp": 13, "interv": 13, "1": [10, 13, 14, 21], "master_main": 13, "master_timestamp": 13, "slave_main": 13, "slave_timestamp": 13, "synchronized_main": 13, "featureextractor": [1, 13, 15], "segment_data": [13, 17], "classifi": [1, 13, 18], "lda": [13, 18], "sklearn_classifi": [13, 18], "sklearnclassifi": [18, 19], "feature_extractor": [1, 5, 13, 18], "csp": [13, 18], "sklearn_feature_extractor": [13, 18], "sklearnfeatureextractor": [18, 20], "sklearncompatibletrainablenod": [1, 13, 18, 19, 20], "trainableprocessingnod": [1, 13, 18], "input_data": [13, 18], "input_label": [13, 18], "label": [6, 14, 18], "mean": [6, 10, 21], "standard_devi": [6, 21], "maximum": [6, 21], "minimum": [6, 21], "script_path": 21, "code": [6, 21], "content": 22, "encod": [1, 5, 10, 13], "onehottosingl": [1, 5, 13], "singletoonehot": [1, 5, 13], "filter": [1, 5, 13, 20], "bandpass": [1, 5, 13], "segment": [1, 5, 13], "fixedwindowsegment": [1, 5, 13], "trainabl": [1, 5, 13, 17], "sklearn_compatible_trainable_nod": [1, 5, 13], "trainable_processing_nod": [1, 5, 13], "type": [3, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "retriev": 3, "read": [6, 7, 10], "csv": [6, 7, 12], "send": [6, 7], "pipelin": [6, 7, 17], "initi": [6, 7, 8, 13, 21], "memori": 7, "your": 7, "must": [7, 10, 13, 17, 18], "defin": [6, 7, 13, 21], "follow": [6, 7, 18, 21], "configur": [0, 2, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "json": [6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "param": [], "case": [6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "file_path": [7, 12], "path": [6, 7, 12, 18, 19, 20, 21], "sampling_frequ": 7, "collect": [6, 7], "timestamp_column_nam": 7, "column": 7, "channel_column_nam": 7, "onc": [], "buffer_opt": [6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "buffer": [6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20], "clear_output_buffer_on_gener": [6, 7], "clear": [6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20], "where": [6, 7, 13, 14], "other": [6, 7, 17, 18], "word": 7, "next": [6, 7, 13], "close": [], "work": 7, "principl": 7, "similar": 7, "instead": [7, 18], "produc": 13, "logic": [13, 18], "attribut": [6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "_module_nam": [6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "constant": 13, "string": 13, "repres": [6, 13, 14, 21], "__init__": 13, "_validate_paramet": 13, "valid": [8, 13], "requir": [6, 13, 21], "_initialize_parameter_field": 13, "custom": [13, 21], "field": 13, "_initialize_buffer_opt": 13, "behavior": 13, "_run": 13, "insert": [13, 14, 15, 16, 17, 18, 19, 20], "_process_input_buff": 13, "_is_next_node_call_en": 13, "allow": 13, "call": [6, 12, 13, 17, 21], "_is_processing_condition_satisfi": 13, "condit": [10, 13], "satisfi": 13, "_process": [13, 16], "_get_input": 13, "_get_output": 13, "common": [6, 13, 20], "so": [6, 14, 17, 18], "inherit": [6, 8, 18], "were": [6, 8, 21], "pass": [6, 8, 15, 16, 18, 21], "come": [6, 21], "motor": 6, "imageri": 6, "user": [6, 21], "order": [6, 10], "thei": [6, 13], "finish": 6, "either": 6, "shuffl": 6, "again": 6, "usag": [6, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21], "event": [6, 21], "e": [6, 10, 21], "g": [6, 10, 21], "hand": [6, 21], "grasp": [6, 21], "feet": [6, 21], "movement": [6, 21], "etc": [6, 10, 14, 21], "just": [6, 17, 19, 20, 21], "identifi": [6, 21], "standard": [6, 21], "deviat": [6, 21], "differ": [6, 10, 18, 21], "python": [6, 10, 21], "save": [6, 18, 19, 20, 21], "velu": [6, 21], "shuffle_when_sequence_is_finish": 6, "thread": 6, "script": 21, "anyth": 21, "end": 21, "config": 21, "exampl": [6, 11, 12, 13, 16, 21], "need": [6, 13, 17, 19, 20, 21], "restrict": 21, "statist": [10, 13, 17, 21], "For": [17, 21], "5": [10, 21], "second": 21, "rang": [16, 21], "4": 21, "6": [10, 21], "local": 21, "valueerror": 21, "doesn": 21, "t": 21, "exist": [3, 21], "timer": 21, "reach": 21, "connect": [6, 10], "openbci": 6, "board": 6, "brainflow": 6, "librari": 6, "support": 6, "abl": 6, "commun": [6, 10], "wifi": 6, "bluetooth": 6, "usb": 6, "synthet": 6, "purpos": [6, 18], "open_bci_board": 6, "ip_port": 6, "ip": 6, "port": [6, 10], "socket": 6, "some": 6, "know": 6, "front": 6, "dont": 6, "mac_address": 6, "mac": 6, "address": 6, "provid": 6, "try": 6, "autodiscov": 6, "other_info": 6, "info": 6, "shield": 6, "serial_numb": 6, "serial": 6, "import": [6, 17], "place": 6, "ip_address": 6, "which": [6, 10, 18], "ip_protocol": 6, "protocol": 6, "ipprotocoltyp": 6, "enum": 6, "lib": 6, "timeout": 6, "discoveri": 6, "serial_port": [6, 10], "com4": [6, 10], "dev": [6, 10], "ttyacm0": [6, 10], "log_level": 6, "log": 6, "level": 6, "off": [6, 10], "synthetic_board": 6, "http": 6, "readthedoc": 6, "io": 6, "en": 6, "stabl": 6, "supportedboard": 6, "html": 6, "real": 6, "feed": 6, "meant": 6, "scenario": 6, "safe": 6, "batch": 6, "directli": [6, 8, 18], "_generate_data": 6, "respons": [6, 8], "previou": [6, 10, 13], "should": [8, 10, 18], "rather": 8, "capabl": 12, "write": [10, 12], "written": 12, "clear_output_buffer_on_data_input": [10, 12, 13, 14, 15, 16, 17, 18, 19, 20], "whether": [12, 13, 14, 15, 16, 17, 18, 19, 20], "clear_input_buffer_after_process": [10, 12, 13, 14, 15, 16, 17, 18, 19, 20], "after": [12, 13, 14, 15, 16, 17, 18, 19, 20], "clear_output_buffer_after_process": [10, 12, 13, 14, 15, 16, 17, 18, 19, 20], "certain": [13, 16], "amount": 13, "desir": 13, "zero": [13, 17], "last": [13, 17], "fill_siz": 13, "size": [10, 11, 12, 13, 17, 18, 19, 20], "filling_typ": 13, "master": 13, "slave": 13, "alwai": 13, "kept": 13, "present": 13, "renam": [3, 13], "ad": 13, "automat": [13, 17], "bit": [10, 13], "tricki": 13, "goe": 13, "section": 13, "least": 13, "two": [13, 19], "befor": 13, "him": 13, "those": 13, "addit": 13, "here": 13, "": [10, 11, 13, 16, 17], "root": 13, "node_a": 13, "data_a": 13, "node_b": 13, "data_b": 13, "convert": 14, "hot": 14, "signal": [14, 17, 20], "One": 14, "vector": 14, "everywher": 14, "els": 14, "count": [3, 14], "2": [10, 14, 20], "There": 14, "hi": [14, 15, 16, 17, 18], "ordin": 14, "featur": [15, 17, 20], "extractor": [15, 17, 20], "extract": [15, 20], "dataset": 15, "within": 16, "reject": 16, "attenu": 16, "outsid": 16, "doe": [16, 17], "butterworth": 16, "scipi": 16, "btype": 16, "band": 16, "done": [16, 17], "parent": 16, "low_cut_frequency_hz": 16, "low": 16, "cut": 16, "hz": 16, "high_cut_frequency_hz": 16, "high": 16, "lowpass": 16, "highpass": 16, "bandstop": 16, "fix": 17, "window": [11, 17], "epoch": 17, "wai": 17, "exempl": 17, "200": 17, "training_set_s": [17, 18, 19, 20], "10": 17, "2000": 17, "100": 17, "1000": 17, "window_s": 17, "filling_valu": 17, "complet": 17, "latest": 17, "depend": 17, "smaller": 17, "part": 17, "In": 17, "mani": [17, 18], "analysi": 17, "split": 17, "character": 17, "amplitud": 17, "subclass": [17, 19], "sklearn": [18, 19, 20], "processor": [18, 19, 20], "sklear": 18, "wrap": 18, "them": 18, "transformermixin": 18, "transform": 18, "baseestim": 18, "estim": [18, 20], "But": 18, "everi": 18, "save_after_train": [18, 19, 20], "save_file_path": [18, 19, 20], "mandatori": [18, 19, 20], "load_train": [18, 19, 20], "load": [18, 19, 20], "load_file_path": [18, 19, 20], "clear_input_buffer_after_train": [18, 19, 20], "process_input_buffer_after_train": [18, 19, 20], "correct": 18, "wrapper": [19, 20], "lineardiscriminantanalysi": 19, "more": 19, "seri": [19, 20], "m": [10, 20], "decomposit": 20, "spatial": 20, "pattern": 20, "supervis": 20, "decod": 20, "problem": 20, "number_of_compon": 20, "compon": 20, "decompos": 20, "block": [], "slave_fil": 13, "statistics_en": 13, "calcul": 13, "error": 13, "run_app": [1, 2, 22], "build_graphviz_represent": [1, 3, 5, 6], "rename_channel": [1, 3, 22], "splice": [1, 3, 22], "current_nam": 3, "new_nam": 3, "replac": 3, "start_index": 3, "remov": 3, "item": 3, "origin": 3, "serialoutputnod": 10, "esp32": 10, "develop": 10, "lener": 10, "lab": 10, "uel": 10, "control": 10, "electr": 10, "stimul": 10, "command": 10, "trigger": 10, "result": 10, "avoid": 10, "flood": 10, "unnecessari": 10, "utf": 10, "8": 10, "termin": 10, "rn": 10, "n": 10, "baud_rat": 10, "baud": 10, "rate": 10, "11520": 10, "byte_s": 10, "byte": 10, "7": 10, "pariti": 10, "even": 10, "odd": 10, "o": 10, "mark": 10, "space": 10, "stop_bit": 10, "express": 10, "ON": 10, "variabl": 10, "condition_data": 10, "math": 10, "avail": 10, "line": 10, "electric_stimul": 10, "altogeth": 10, "consol": 11, "plot_sign": 11, "500": 11, "plot": 11, "print_buffer_s": 12, "wether": 12, "output_prob": [18, 19], "probabl": 19, "filenam": 21}, "objects": {"": [[0, 0, 0, "-", "application"], [2, 0, 0, "-", "main"], [3, 0, 0, "-", "models"]], "application": [[0, 1, 1, "", "Application"]], "application.Application": [[0, 2, 1, "", "dispose"], [0, 2, 1, "", "get_generator_node_from_module_and_type"], [0, 2, 1, "", "get_node_from_module_and_type"], [0, 2, 1, "", "run"]], "main": [[2, 3, 1, "", "run_app"], [2, 3, 1, "", "start"], [2, 3, 1, "", "stop"]], "models": [[4, 0, 0, "-", "exception"], [3, 0, 0, "-", "framework_data"], [5, 0, 0, "-", "node"], [21, 0, 0, "-", "utils"]], "models.exception": [[4, 0, 0, "-", "framework_base_exception"], [4, 0, 0, "-", "invalid_parameter_value"], [4, 0, 0, "-", "missing_parameter"], [4, 0, 0, "-", "non_compatible_data"]], "models.exception.framework_base_exception": [[4, 4, 1, "", "FrameworkBaseException"]], "models.exception.invalid_parameter_value": [[4, 4, 1, "", "InvalidParameterValue"]], "models.exception.missing_parameter": [[4, 4, 1, "", "MissingParameterError"]], "models.exception.non_compatible_data": [[4, 4, 1, "", "NonCompatibleData"]], "models.framework_data": [[3, 1, 1, "", "FrameworkData"]], "models.framework_data.FrameworkData": [[3, 2, 1, "", "extend"], [3, 2, 1, "", "from_multi_channel"], [3, 2, 1, "", "from_single_channel"], [3, 2, 1, "", "get_channels_as_set"], [3, 2, 1, "", "get_data"], [3, 2, 1, "", "get_data_as_2d_array"], [3, 2, 1, "", "get_data_at_index"], [3, 2, 1, "", "get_data_count"], [3, 2, 1, "", "get_data_on_channel"], [3, 2, 1, "", "get_data_single_channel"], [3, 2, 1, "", "has_data"], [3, 2, 1, "", "input_2d_data"], [3, 2, 1, "", "input_data_on_channel"], [3, 2, 1, "", "is_1d"], [3, 2, 1, "", "rename_channel"], [3, 2, 1, "", "splice"]], "models.node": [[6, 0, 0, "-", "generator"], [5, 0, 0, "-", "node"], [8, 0, 0, "-", "output"], [13, 0, 0, "-", "processing"]], "models.node.generator": [[7, 0, 0, "-", "file"], [6, 0, 0, "-", "generator_node"], [6, 0, 0, "-", "motorimagery"], [6, 0, 0, "-", "openbciboard"], [6, 0, 0, "-", "single_run_generator_node"]], "models.node.generator.file": [[7, 0, 0, "-", "csvfile"], [7, 0, 0, "-", "csvfilearray"]], "models.node.generator.file.csvfile": [[7, 1, 1, "", "CSVFile"]], "models.node.generator.file.csvfile.CSVFile": [[7, 5, 1, "", "OUTPUT_MAIN"], [7, 5, 1, "", "OUTPUT_TIMESTAMP"], [7, 2, 1, "", "dispose"]], "models.node.generator.file.csvfilearray": [[7, 1, 1, "", "CSVFileArray"]], "models.node.generator.file.csvfilearray.CSVFileArray": [[7, 5, 1, "", "OUTPUT_MAIN"], [7, 5, 1, "", "OUTPUT_TIMESTAMP"], [7, 2, 1, "", "dispose"]], "models.node.generator.generator_node": [[6, 1, 1, "", "GeneratorNode"]], "models.node.generator.motorimagery": [[6, 1, 1, "", "MotorImagery"]], "models.node.generator.motorimagery.MotorImagery": [[6, 5, 1, "", "OUTPUT_MARKER"], [6, 5, 1, "", "OUTPUT_TIMESTAMP"], [6, 2, 1, "", "dispose"], [6, 2, 1, "", "from_config_json"], [6, 2, 1, "", "start"], [6, 2, 1, "", "stop"]], "models.node.generator.openbciboard": [[6, 1, 1, "", "OpenBCIBoard"]], "models.node.generator.openbciboard.OpenBCIBoard": [[6, 5, 1, "", "OUTPUT_ACCELEROMETER"], [6, 5, 1, "", "OUTPUT_EEG"], [6, 5, 1, "", "OUTPUT_TIMESTAMP"], [6, 2, 1, "", "build_graphviz_representation"], [6, 2, 1, "", "dispose"], [6, 2, 1, "", "start"], [6, 2, 1, "", "stop"]], "models.node.generator.single_run_generator_node": [[6, 1, 1, "", "SingleRunGeneratorNode"]], "models.node.generator.single_run_generator_node.SingleRunGeneratorNode": [[6, 2, 1, "", "run"]], "models.node.node": [[5, 1, 1, "", "Node"]], "models.node.node.Node": [[5, 2, 1, "", "add_child"], [5, 2, 1, "", "build_graphviz_representation"], [5, 2, 1, "", "check_input"], [5, 2, 1, "", "check_output"], [5, 2, 1, "", "dispose"], [5, 2, 1, "", "dispose_all"], [5, 2, 1, "", "from_config_json"], [5, 6, 1, "", "module_name"], [5, 2, 1, "", "print"], [5, 2, 1, "", "run"]], "models.node.output": [[9, 0, 0, "-", "device"], [11, 0, 0, "-", "display"], [12, 0, 0, "-", "file"], [8, 0, 0, "-", "output_node"]], "models.node.output.device": [[10, 0, 0, "-", "serial"]], "models.node.output.device.serial": [[10, 0, 0, "-", "eletroestimuladoresp32"], [10, 0, 0, "-", "serial_output_node"]], "models.node.output.device.serial.eletroestimuladoresp32": [[10, 1, 1, "", "EletroEstimuladorESP32"]], "models.node.output.device.serial.eletroestimuladoresp32.EletroEstimuladorESP32": [[10, 5, 1, "", "INPUT_MAIN"], [10, 2, 1, "", "dispose"]], "models.node.output.device.serial.serial_output_node": [[10, 1, 1, "", "SerialOutputNode"]], "models.node.output.device.serial.serial_output_node.SerialOutputNode": [[10, 2, 1, "", "dispose"]], "models.node.output.display": [[11, 0, 0, "-", "simplegraph"]], "models.node.output.display.simplegraph": [[11, 1, 1, "", "SimpleGraph"]], "models.node.output.display.simplegraph.SimpleGraph": [[11, 5, 1, "", "INPUT_MAIN"], [11, 2, 1, "", "dispose"]], "models.node.output.file": [[12, 0, 0, "-", "csvfile"], [12, 0, 0, "-", "writeedf"]], "models.node.output.file.csvfile": [[12, 1, 1, "", "CSVFile"]], "models.node.output.file.csvfile.CSVFile": [[12, 5, 1, "", "INPUT_MAIN"], [12, 2, 1, "", "dispose"]], "models.node.output.output_node": [[8, 1, 1, "", "OutputNode"]], "models.node.output.output_node.OutputNode": [[8, 2, 1, "", "dispose"]], "models.node.processing": [[14, 0, 0, "-", "encoder"], [15, 0, 0, "-", "feature_extractor"], [13, 0, 0, "-", "fill"], [16, 0, 0, "-", "filter"], [13, 0, 0, "-", "merge"], [13, 0, 0, "-", "processing_node"], [17, 0, 0, "-", "segmenter"], [13, 0, 0, "-", "signalcheck"], [13, 0, 0, "-", "synchronize"], [18, 0, 0, "-", "trainable"]], "models.node.processing.encoder": [[14, 0, 0, "-", "onehottosingle"], [14, 0, 0, "-", "singletoonehot"]], "models.node.processing.encoder.onehottosingle": [[14, 1, 1, "", "OneHotToSingle"]], "models.node.processing.encoder.onehottosingle.OneHotToSingle": [[14, 5, 1, "", "INPUT_MAIN"], [14, 5, 1, "", "OUTPUT_MAIN"]], "models.node.processing.encoder.singletoonehot": [[14, 1, 1, "", "SingleToOneHot"]], "models.node.processing.encoder.singletoonehot.SingleToOneHot": [[14, 5, 1, "", "INPUT_MAIN"], [14, 5, 1, "", "OUTPUT_MAIN"]], "models.node.processing.feature_extractor": [[15, 0, 0, "-", "feature_extractor"]], "models.node.processing.feature_extractor.feature_extractor": [[15, 1, 1, "", "FeatureExtractor"]], "models.node.processing.feature_extractor.feature_extractor.FeatureExtractor": [[15, 2, 1, "", "from_config_json"]], "models.node.processing.fill": [[13, 1, 1, "", "Fill"]], "models.node.processing.fill.Fill": [[13, 5, 1, "", "FILL_TYPE_SAMPLE_AND_HOLD"], [13, 5, 1, "", "FILL_TYPE_ZEROFILL"], [13, 5, 1, "", "INPUT_MAIN"], [13, 5, 1, "", "OUTPUT_MAIN"]], "models.node.processing.filter": [[16, 0, 0, "-", "bandpass"], [16, 0, 0, "-", "filter"]], "models.node.processing.filter.bandpass": [[16, 1, 1, "", "BandPass"]], "models.node.processing.filter.filter": [[16, 1, 1, "", "Filter"]], "models.node.processing.filter.filter.Filter": [[16, 5, 1, "", "INPUT_MAIN"], [16, 5, 1, "", "OUTPUT_MAIN"]], "models.node.processing.merge": [[13, 1, 1, "", "Merge"], [13, 3, 1, "", "random"]], "models.node.processing.merge.Merge": [[13, 5, 1, "", "OUTPUT_MERGED_MAIN"], [13, 5, 1, "", "OUTPUT_MERGED_TIMESTAMP"]], "models.node.processing.processing_node": [[13, 1, 1, "", "ProcessingNode"]], "models.node.processing.processing_node.ProcessingNode": [[13, 2, 1, "", "dispose"]], "models.node.processing.segmenter": [[17, 0, 0, "-", "fixedwindowsegmenter"], [17, 0, 0, "-", "segmenter"]], "models.node.processing.segmenter.fixedwindowsegmenter": [[17, 1, 1, "", "FixedWindowSegmenter"]], "models.node.processing.segmenter.fixedwindowsegmenter.FixedWindowSegmenter": [[17, 2, 1, "", "segment_data"]], "models.node.processing.segmenter.segmenter": [[17, 1, 1, "", "Segmenter"]], "models.node.processing.segmenter.segmenter.Segmenter": [[17, 5, 1, "", "INPUT_MAIN"], [17, 5, 1, "", "OUTPUT_MAIN"], [17, 2, 1, "", "segment_data"]], "models.node.processing.signalcheck": [[13, 1, 1, "", "SignalCheck"]], "models.node.processing.signalcheck.SignalCheck": [[13, 5, 1, "", "INPUT_MAIN"], [13, 5, 1, "", "OUTPUT_MAIN"]], "models.node.processing.synchronize": [[13, 1, 1, "", "Synchronize"]], "models.node.processing.synchronize.Synchronize": [[13, 5, 1, "", "FILL_TYPE_SAMPLE_AND_HOLD"], [13, 5, 1, "", "FILL_TYPE_ZEROFILL"], [13, 5, 1, "", "INPUT_MASTER_MAIN"], [13, 5, 1, "", "INPUT_MASTER_TIMESTAMP"], [13, 5, 1, "", "INPUT_SLAVE_MAIN"], [13, 5, 1, "", "INPUT_SLAVE_TIMESTAMP"], [13, 5, 1, "", "OUTPUT_SYNCHRONIZED_MAIN"]], "models.node.processing.trainable": [[19, 0, 0, "-", "classifier"], [20, 0, 0, "-", "feature_extractor"], [18, 0, 0, "-", "sklearn_compatible_trainable_node"], [18, 0, 0, "-", "trainable_processing_node"]], "models.node.processing.trainable.classifier": [[19, 0, 0, "-", "lda"], [19, 0, 0, "-", "sklearn_classifier"]], "models.node.processing.trainable.classifier.lda": [[19, 1, 1, "", "LDA"]], "models.node.processing.trainable.classifier.sklearn_classifier": [[19, 1, 1, "", "SKLearnClassifier"]], "models.node.processing.trainable.classifier.sklearn_classifier.SKLearnClassifier": [[19, 5, 1, "", "OUTPUT_PROBABILITY"]], "models.node.processing.trainable.feature_extractor": [[20, 0, 0, "-", "csp"], [20, 0, 0, "-", "sklearn_feature_extractor"]], "models.node.processing.trainable.feature_extractor.csp": [[20, 1, 1, "", "CSP"]], "models.node.processing.trainable.feature_extractor.sklearn_feature_extractor": [[20, 1, 1, "", "SKLearnFeatureExtractor"]], "models.node.processing.trainable.sklearn_compatible_trainable_node": [[18, 1, 1, "", "SKLearnCompatibleTrainableNode"]], "models.node.processing.trainable.sklearn_compatible_trainable_node.SKLearnCompatibleTrainableNode": [[18, 5, 1, "", "OUTPUT_MAIN"], [18, 2, 1, "", "from_config_json"]], "models.node.processing.trainable.trainable_processing_node": [[18, 1, 1, "", "TrainableProcessingNode"]], "models.node.processing.trainable.trainable_processing_node.TrainableProcessingNode": [[18, 5, 1, "", "INPUT_DATA"], [18, 5, 1, "", "INPUT_LABEL"]], "models.utils": [[21, 0, 0, "-", "cue"], [21, 0, 0, "-", "duration"], [21, 0, 0, "-", "script_execution"], [21, 0, 0, "-", "trial"]], "models.utils.cue": [[21, 1, 1, "", "Cue"]], "models.utils.cue.Cue": [[21, 2, 1, "", "execute"], [21, 2, 1, "", "from_config_json"]], "models.utils.duration": [[21, 1, 1, "", "Duration"]], "models.utils.duration.Duration": [[21, 2, 1, "", "from_config_json"], [21, 2, 1, "", "get_duration"]], "models.utils.script_execution": [[21, 3, 1, "", "script_execute"]], "models.utils.trial": [[21, 1, 1, "", "Trial"]], "models.utils.trial.Trial": [[21, 2, 1, "", "from_config_json"], [21, 2, 1, "", "on_stop"], [21, 2, 1, "", "start"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:exception", "5": "py:attribute", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "exception", "Python exception"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "property", "Python property"]}, "titleterms": {"applic": 0, "modul": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "welcom": 1, "open_bci_framework": 1, "": 1, "document": 1, "content": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "indic": 1, "tabl": 1, "main": 2, "model": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "packag": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "subpackag": [3, 5, 6, 8, 13, 18], "submodul": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "framework_data": 3, "except": 4, "framework_base_except": 4, "invalid_parameter_valu": 4, "missing_paramet": 4, "non_compatible_data": 4, "node": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "gener": [6, 7], "generator_nod": 6, "motorimageri": 6, "openbciboard": 6, "single_run_generator_nod": 6, "file": [7, 12], "csvfile": [7, 12], "csvfilearrai": 7, "output": [8, 9, 10, 11, 12], "output_nod": 8, "devic": [9, 10], "eletroestimuladordopaulo": 9, "displai": 11, "simplegraph": 11, "writeedf": 12, "process": [13, 14, 15, 16, 17, 18, 19, 20], "fill": 13, "merg": 13, "processing_nod": 13, "signalcheck": 13, "synchron": 13, "encod": 14, "onehottosingl": 14, "singletoonehot": 14, "feature_extractor": [15, 20], "filter": 16, "bandpass": 16, "segment": 17, "fixedwindowsegment": 17, "trainabl": [18, 19, 20], "sklearn_compatible_trainable_nod": 18, "trainable_processing_nod": 18, "classifi": 19, "lda": 19, "sklearn_classifi": 19, "csp": 20, "sklearn_feature_extractor": 20, "util": 21, "cue": 21, "durat": 21, "script_execut": 21, "trial": 21, "openbci_python_framework": 22, "serial": 10, "eletroestimuladoresp32": 10, "serial_output_nod": 10}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"application module": [[0, "module-application"]], "Welcome to Open_BCI_Framework\u2019s documentation!": [[1, "welcome-to-open-bci-framework-s-documentation"]], "Contents:": [[1, null]], "Indices and tables": [[1, "indices-and-tables"]], "main module": [[2, "module-main"]], "models package": [[3, "models-package"]], "Subpackages": [[3, "subpackages"], [5, "subpackages"], [6, "subpackages"], [8, "subpackages"], [13, "subpackages"], [18, "subpackages"]], "Submodules": [[3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"]], "framework_data module": [[3, "module-models.framework_data"]], "Module contents": [[3, "module-models"], [4, "module-models.exception"], [5, "module-models.node"], [6, "module-models.node.generator"], [7, "module-models.node.generator.file"], [8, "module-models.node.output"], [9, "module-models.node.output.device"], [10, "module-models.node.output.device.serial"], [11, "module-models.node.output.display"], [12, "module-models.node.output.file"], [13, "module-models.node.processing"], [14, "module-models.node.processing.encoder"], [15, "module-models.node.processing.feature_extractor"], [16, "module-models.node.processing.filter"], [17, "module-models.node.processing.segmenter"], [18, "module-models.node.processing.trainable"], [19, "module-models.node.processing.trainable.classifier"], [20, "module-models.node.processing.trainable.feature_extractor"], [21, "module-models.utils"]], "models.exception package": [[4, "models-exception-package"]], "framework_base_exception module": [[4, "module-models.exception.framework_base_exception"]], "invalid_parameter_value module": [[4, "module-models.exception.invalid_parameter_value"]], "missing_parameter module": [[4, "module-models.exception.missing_parameter"]], "non_compatible_data module": [[4, "module-models.exception.non_compatible_data"]], "models.node package": [[5, "models-node-package"]], "models.node.node module": [[5, "module-models.node.node"]], "models.node.generator package": [[6, "models-node-generator-package"]], "models.node.generator.generator_node module": [[6, "module-models.node.generator.generator_node"]], "models.node.generator.motorimagery module": [[6, "module-models.node.generator.motorimagery"]], "models.node.generator.openbciboard module": [[6, "module-models.node.generator.openbciboard"]], "models.node.generator.single_run_generator_node module": [[6, "module-models.node.generator.single_run_generator_node"]], "models.node.generator.file package": [[7, "models-node-generator-file-package"]], "models.node.generator.file.csvfile module": [[7, "module-models.node.generator.file.csvfile"]], "models.node.generator.file.csvfilearray module": [[7, "module-models.node.generator.file.csvfilearray"]], "models.node.output package": [[8, "models-node-output-package"]], "models.node.output.output_node module": [[8, "module-models.node.output.output_node"]], "models.node.output.device package": [[9, "models-node-output-device-package"]], "models.node.output.device.eletroestimuladordopaulo module": [[9, "models-node-output-device-eletroestimuladordopaulo-module"]], "models.node.output.device.serial package": [[10, "models-node-output-device-serial-package"]], "models.node.output.device.serial.eletroestimuladoresp32 module": [[10, "module-models.node.output.device.serial.eletroestimuladoresp32"]], "models.node.output.device.serial.serial_output_node module": [[10, "module-models.node.output.device.serial.serial_output_node"]], "models.node.output.display package": [[11, "models-node-output-display-package"]], "models.node.output.display.simplegraph module": [[11, "module-models.node.output.display.simplegraph"]], "models.node.output.file package": [[12, "models-node-output-file-package"]], "models.node.output.file.csvfile module": [[12, "module-models.node.output.file.csvfile"]], "models.node.output.file.writeedf module": [[12, "module-models.node.output.file.writeedf"]], "models.node.processing package": [[13, "models-node-processing-package"]], "models.node.processing.fill module": [[13, "module-models.node.processing.fill"]], "models.node.processing.merge module": [[13, "module-models.node.processing.merge"]], "models.node.processing.processing_node module": [[13, "module-models.node.processing.processing_node"]], "models.node.processing.signalcheck module": [[13, "module-models.node.processing.signalcheck"]], "models.node.processing.synchronize module": [[13, "module-models.node.processing.synchronize"]], "models.node.processing.encoder package": [[14, "models-node-processing-encoder-package"]], "models.node.processing.encoder.onehottosingle module": [[14, "module-models.node.processing.encoder.onehottosingle"]], "models.node.processing.encoder.singletoonehot module": [[14, "module-models.node.processing.encoder.singletoonehot"]], "models.node.processing.feature_extractor package": [[15, "models-node-processing-feature-extractor-package"]], "models.node.processing.feature_extractor.feature_extractor module": [[15, "module-models.node.processing.feature_extractor.feature_extractor"]], "models.node.processing.filter package": [[16, "models-node-processing-filter-package"]], "models.node.processing.filter.bandpass module": [[16, "module-models.node.processing.filter.bandpass"]], "models.node.processing.filter.filter module": [[16, "module-models.node.processing.filter.filter"]], "models.node.processing.segmenter package": [[17, "models-node-processing-segmenter-package"]], "models.node.processing.segmenter.fixedwindowsegmenter module": [[17, "module-models.node.processing.segmenter.fixedwindowsegmenter"]], "models.node.processing.segmenter.segmenter module": [[17, "module-models.node.processing.segmenter.segmenter"]], "models.node.processing.trainable package": [[18, "models-node-processing-trainable-package"]], "models.node.processing.trainable.sklearn_compatible_trainable_node module": [[18, "module-models.node.processing.trainable.sklearn_compatible_trainable_node"]], "models.node.processing.trainable.trainable_processing_node module": [[18, "module-models.node.processing.trainable.trainable_processing_node"]], "models.node.processing.trainable.classifier package": [[19, "models-node-processing-trainable-classifier-package"]], "models.node.processing.trainable.classifier.lda module": [[19, "module-models.node.processing.trainable.classifier.lda"]], "models.node.processing.trainable.classifier.sklearn_classifier module": [[19, "module-models.node.processing.trainable.classifier.sklearn_classifier"]], "models.node.processing.trainable.feature_extractor package": [[20, "models-node-processing-trainable-feature-extractor-package"]], "models.node.processing.trainable.feature_extractor.csp module": [[20, "module-models.node.processing.trainable.feature_extractor.csp"]], "models.node.processing.trainable.feature_extractor.sklearn_feature_extractor module": [[20, "module-models.node.processing.trainable.feature_extractor.sklearn_feature_extractor"]], "models.utils package": [[21, "models-utils-package"]], "models.utils.cue module": [[21, "module-models.utils.cue"]], "models.utils.duration module": [[21, "module-models.utils.duration"]], "models.utils.script_execution module": [[21, "module-models.utils.script_execution"]], "models.utils.trial module": [[21, "module-models.utils.trial"]], "OpenBCI_Python_Framework": [[22, "openbci-python-framework"]]}, "indexentries": {"application (class in application)": [[0, "application.Application"]], "application": [[0, "module-application"]], "dispose() (application.application method)": [[0, "application.Application.dispose"]], "get_generator_node_from_module_and_type() (application.application static method)": [[0, "application.Application.get_generator_node_from_module_and_type"]], "get_node_from_module_and_type() (application.application static method)": [[0, "application.Application.get_node_from_module_and_type"]], "module": [[0, "module-application"], [2, "module-main"], [3, "module-models"], [3, "module-models.framework_data"], [4, "module-models.exception"], [4, "module-models.exception.framework_base_exception"], [4, "module-models.exception.invalid_parameter_value"], [4, "module-models.exception.missing_parameter"], [4, "module-models.exception.non_compatible_data"], [5, "module-models.node"], [5, "module-models.node.node"], [6, "module-models.node.generator"], [6, "module-models.node.generator.generator_node"], [6, "module-models.node.generator.motorimagery"], [6, "module-models.node.generator.openbciboard"], [6, "module-models.node.generator.single_run_generator_node"], [7, "module-models.node.generator.file"], [7, "module-models.node.generator.file.csvfile"], [7, "module-models.node.generator.file.csvfilearray"], [8, "module-models.node.output"], [8, "module-models.node.output.output_node"], [9, "module-models.node.output.device"], [10, "module-models.node.output.device.serial"], [10, "module-models.node.output.device.serial.eletroestimuladoresp32"], [10, "module-models.node.output.device.serial.serial_output_node"], [11, "module-models.node.output.display"], [11, "module-models.node.output.display.simplegraph"], [12, "module-models.node.output.file"], [12, "module-models.node.output.file.csvfile"], [12, "module-models.node.output.file.writeedf"], [13, "module-models.node.processing"], [13, "module-models.node.processing.fill"], [13, "module-models.node.processing.merge"], [13, "module-models.node.processing.processing_node"], [13, "module-models.node.processing.signalcheck"], [13, "module-models.node.processing.synchronize"], [14, "module-models.node.processing.encoder"], [14, "module-models.node.processing.encoder.onehottosingle"], [14, "module-models.node.processing.encoder.singletoonehot"], [15, "module-models.node.processing.feature_extractor"], [15, "module-models.node.processing.feature_extractor.feature_extractor"], [16, "module-models.node.processing.filter"], [16, "module-models.node.processing.filter.bandpass"], [16, "module-models.node.processing.filter.filter"], [17, "module-models.node.processing.segmenter"], [17, "module-models.node.processing.segmenter.fixedwindowsegmenter"], [17, "module-models.node.processing.segmenter.segmenter"], [18, "module-models.node.processing.trainable"], [18, "module-models.node.processing.trainable.sklearn_compatible_trainable_node"], [18, "module-models.node.processing.trainable.trainable_processing_node"], [19, "module-models.node.processing.trainable.classifier"], [19, "module-models.node.processing.trainable.classifier.lda"], [19, "module-models.node.processing.trainable.classifier.sklearn_classifier"], [20, "module-models.node.processing.trainable.feature_extractor"], [20, "module-models.node.processing.trainable.feature_extractor.csp"], [20, "module-models.node.processing.trainable.feature_extractor.sklearn_feature_extractor"], [21, "module-models.utils"], [21, "module-models.utils.cue"], [21, "module-models.utils.duration"], [21, "module-models.utils.script_execution"], [21, "module-models.utils.trial"]], "run() (application.application method)": [[0, "application.Application.run"]], "main": [[2, "module-main"]], "run_app() (in module main)": [[2, "main.run_app"]], "start() (in module main)": [[2, "main.start"]], "stop() (in module main)": [[2, "main.stop"]], "frameworkdata (class in models.framework_data)": [[3, "models.framework_data.FrameworkData"]], "extend() (models.framework_data.frameworkdata method)": [[3, "models.framework_data.FrameworkData.extend"]], "from_multi_channel() (models.framework_data.frameworkdata class method)": [[3, "models.framework_data.FrameworkData.from_multi_channel"]], "from_single_channel() (models.framework_data.frameworkdata class method)": [[3, "models.framework_data.FrameworkData.from_single_channel"]], "get_channels_as_set() (models.framework_data.frameworkdata method)": [[3, "models.framework_data.FrameworkData.get_channels_as_set"]], "get_data() (models.framework_data.frameworkdata method)": [[3, "models.framework_data.FrameworkData.get_data"]], "get_data_as_2d_array() (models.framework_data.frameworkdata method)": [[3, "models.framework_data.FrameworkData.get_data_as_2d_array"]], "get_data_at_index() (models.framework_data.frameworkdata method)": [[3, "models.framework_data.FrameworkData.get_data_at_index"]], "get_data_count() (models.framework_data.frameworkdata method)": [[3, "models.framework_data.FrameworkData.get_data_count"]], "get_data_on_channel() (models.framework_data.frameworkdata method)": [[3, "models.framework_data.FrameworkData.get_data_on_channel"]], "get_data_single_channel() (models.framework_data.frameworkdata method)": [[3, "models.framework_data.FrameworkData.get_data_single_channel"]], "has_data() (models.framework_data.frameworkdata method)": [[3, "models.framework_data.FrameworkData.has_data"]], "input_2d_data() (models.framework_data.frameworkdata method)": [[3, "models.framework_data.FrameworkData.input_2d_data"]], "input_data_on_channel() (models.framework_data.frameworkdata method)": [[3, "models.framework_data.FrameworkData.input_data_on_channel"]], "is_1d() (models.framework_data.frameworkdata method)": [[3, "models.framework_data.FrameworkData.is_1d"]], "models": [[3, "module-models"]], "models.framework_data": [[3, "module-models.framework_data"]], "rename_channel() (models.framework_data.frameworkdata method)": [[3, "models.framework_data.FrameworkData.rename_channel"]], "splice() (models.framework_data.frameworkdata method)": [[3, "models.framework_data.FrameworkData.splice"]], "frameworkbaseexception": [[4, "models.exception.framework_base_exception.FrameworkBaseException"]], "invalidparametervalue": [[4, "models.exception.invalid_parameter_value.InvalidParameterValue"]], "missingparametererror": [[4, "models.exception.missing_parameter.MissingParameterError"]], "noncompatibledata": [[4, "models.exception.non_compatible_data.NonCompatibleData"]], "models.exception": [[4, "module-models.exception"]], "models.exception.framework_base_exception": [[4, "module-models.exception.framework_base_exception"]], "models.exception.invalid_parameter_value": [[4, "module-models.exception.invalid_parameter_value"]], "models.exception.missing_parameter": [[4, "module-models.exception.missing_parameter"]], "models.exception.non_compatible_data": [[4, "module-models.exception.non_compatible_data"]], "node (class in models.node.node)": [[5, "models.node.node.Node"]], "add_child() (models.node.node.node method)": [[5, "models.node.node.Node.add_child"]], "build_graphviz_representation() (models.node.node.node method)": [[5, "models.node.node.Node.build_graphviz_representation"]], "check_input() (models.node.node.node method)": [[5, "models.node.node.Node.check_input"]], "check_output() (models.node.node.node method)": [[5, "models.node.node.Node.check_output"]], "dispose() (models.node.node.node method)": [[5, "models.node.node.Node.dispose"]], "dispose_all() (models.node.node.node method)": [[5, "models.node.node.Node.dispose_all"]], "from_config_json() (models.node.node.node class method)": [[5, "models.node.node.Node.from_config_json"]], "models.node": [[5, "module-models.node"]], "models.node.node": [[5, "module-models.node.node"]], "module_name (models.node.node.node property)": [[5, "models.node.node.Node.module_name"]], "print() (models.node.node.node method)": [[5, "models.node.node.Node.print"]], "run() (models.node.node.node method)": [[5, "models.node.node.Node.run"]], "generatornode (class in models.node.generator.generator_node)": [[6, "models.node.generator.generator_node.GeneratorNode"]], "motorimagery (class in models.node.generator.motorimagery)": [[6, "models.node.generator.motorimagery.MotorImagery"]], "output_accelerometer (models.node.generator.openbciboard.openbciboard attribute)": [[6, "models.node.generator.openbciboard.OpenBCIBoard.OUTPUT_ACCELEROMETER"]], "output_eeg (models.node.generator.openbciboard.openbciboard attribute)": [[6, "models.node.generator.openbciboard.OpenBCIBoard.OUTPUT_EEG"]], "output_marker (models.node.generator.motorimagery.motorimagery attribute)": [[6, "models.node.generator.motorimagery.MotorImagery.OUTPUT_MARKER"]], "output_timestamp (models.node.generator.motorimagery.motorimagery attribute)": [[6, "models.node.generator.motorimagery.MotorImagery.OUTPUT_TIMESTAMP"]], "output_timestamp (models.node.generator.openbciboard.openbciboard attribute)": [[6, "models.node.generator.openbciboard.OpenBCIBoard.OUTPUT_TIMESTAMP"]], "openbciboard (class in models.node.generator.openbciboard)": [[6, "models.node.generator.openbciboard.OpenBCIBoard"]], "singlerungeneratornode (class in models.node.generator.single_run_generator_node)": [[6, "models.node.generator.single_run_generator_node.SingleRunGeneratorNode"]], "build_graphviz_representation() (models.node.generator.openbciboard.openbciboard method)": [[6, "models.node.generator.openbciboard.OpenBCIBoard.build_graphviz_representation"]], "dispose() (models.node.generator.motorimagery.motorimagery method)": [[6, "models.node.generator.motorimagery.MotorImagery.dispose"]], "dispose() (models.node.generator.openbciboard.openbciboard method)": [[6, "models.node.generator.openbciboard.OpenBCIBoard.dispose"]], "from_config_json() (models.node.generator.motorimagery.motorimagery class method)": [[6, "models.node.generator.motorimagery.MotorImagery.from_config_json"]], "models.node.generator": [[6, "module-models.node.generator"]], "models.node.generator.generator_node": [[6, "module-models.node.generator.generator_node"]], "models.node.generator.motorimagery": [[6, "module-models.node.generator.motorimagery"]], "models.node.generator.openbciboard": [[6, "module-models.node.generator.openbciboard"]], "models.node.generator.single_run_generator_node": [[6, "module-models.node.generator.single_run_generator_node"]], "run() (models.node.generator.single_run_generator_node.singlerungeneratornode method)": [[6, "models.node.generator.single_run_generator_node.SingleRunGeneratorNode.run"]], "start() (models.node.generator.motorimagery.motorimagery method)": [[6, "models.node.generator.motorimagery.MotorImagery.start"]], "start() (models.node.generator.openbciboard.openbciboard method)": [[6, "models.node.generator.openbciboard.OpenBCIBoard.start"]], "stop() (models.node.generator.motorimagery.motorimagery method)": [[6, "models.node.generator.motorimagery.MotorImagery.stop"]], "stop() (models.node.generator.openbciboard.openbciboard method)": [[6, "models.node.generator.openbciboard.OpenBCIBoard.stop"]], "csvfile (class in models.node.generator.file.csvfile)": [[7, "models.node.generator.file.csvfile.CSVFile"]], "csvfilearray (class in models.node.generator.file.csvfilearray)": [[7, "models.node.generator.file.csvfilearray.CSVFileArray"]], "output_main (models.node.generator.file.csvfile.csvfile attribute)": [[7, "models.node.generator.file.csvfile.CSVFile.OUTPUT_MAIN"]], "output_main (models.node.generator.file.csvfilearray.csvfilearray attribute)": [[7, "models.node.generator.file.csvfilearray.CSVFileArray.OUTPUT_MAIN"]], "output_timestamp (models.node.generator.file.csvfile.csvfile attribute)": [[7, "models.node.generator.file.csvfile.CSVFile.OUTPUT_TIMESTAMP"]], "output_timestamp (models.node.generator.file.csvfilearray.csvfilearray attribute)": [[7, "models.node.generator.file.csvfilearray.CSVFileArray.OUTPUT_TIMESTAMP"]], "dispose() (models.node.generator.file.csvfile.csvfile method)": [[7, "models.node.generator.file.csvfile.CSVFile.dispose"]], "dispose() (models.node.generator.file.csvfilearray.csvfilearray method)": [[7, "models.node.generator.file.csvfilearray.CSVFileArray.dispose"]], "models.node.generator.file": [[7, "module-models.node.generator.file"]], "models.node.generator.file.csvfile": [[7, "module-models.node.generator.file.csvfile"]], "models.node.generator.file.csvfilearray": [[7, "module-models.node.generator.file.csvfilearray"]], "outputnode (class in models.node.output.output_node)": [[8, "models.node.output.output_node.OutputNode"]], "dispose() (models.node.output.output_node.outputnode method)": [[8, "models.node.output.output_node.OutputNode.dispose"]], "models.node.output": [[8, "module-models.node.output"]], "models.node.output.output_node": [[8, "module-models.node.output.output_node"]], "models.node.output.device": [[9, "module-models.node.output.device"]], "eletroestimuladoresp32 (class in models.node.output.device.serial.eletroestimuladoresp32)": [[10, "models.node.output.device.serial.eletroestimuladoresp32.EletroEstimuladorESP32"]], "input_main (models.node.output.device.serial.eletroestimuladoresp32.eletroestimuladoresp32 attribute)": [[10, "models.node.output.device.serial.eletroestimuladoresp32.EletroEstimuladorESP32.INPUT_MAIN"]], "serialoutputnode (class in models.node.output.device.serial.serial_output_node)": [[10, "models.node.output.device.serial.serial_output_node.SerialOutputNode"]], "dispose() (models.node.output.device.serial.eletroestimuladoresp32.eletroestimuladoresp32 method)": [[10, "models.node.output.device.serial.eletroestimuladoresp32.EletroEstimuladorESP32.dispose"]], "dispose() (models.node.output.device.serial.serial_output_node.serialoutputnode method)": [[10, "models.node.output.device.serial.serial_output_node.SerialOutputNode.dispose"]], "models.node.output.device.serial": [[10, "module-models.node.output.device.serial"]], "models.node.output.device.serial.eletroestimuladoresp32": [[10, "module-models.node.output.device.serial.eletroestimuladoresp32"]], "models.node.output.device.serial.serial_output_node": [[10, "module-models.node.output.device.serial.serial_output_node"]], "input_main (models.node.output.display.simplegraph.simplegraph attribute)": [[11, "models.node.output.display.simplegraph.SimpleGraph.INPUT_MAIN"]], "simplegraph (class in models.node.output.display.simplegraph)": [[11, "models.node.output.display.simplegraph.SimpleGraph"]], "dispose() (models.node.output.display.simplegraph.simplegraph method)": [[11, "models.node.output.display.simplegraph.SimpleGraph.dispose"]], "models.node.output.display": [[11, "module-models.node.output.display"]], "models.node.output.display.simplegraph": [[11, "module-models.node.output.display.simplegraph"]], "csvfile (class in models.node.output.file.csvfile)": [[12, "models.node.output.file.csvfile.CSVFile"]], "input_main (models.node.output.file.csvfile.csvfile attribute)": [[12, "models.node.output.file.csvfile.CSVFile.INPUT_MAIN"]], "dispose() (models.node.output.file.csvfile.csvfile method)": [[12, "models.node.output.file.csvfile.CSVFile.dispose"]], "models.node.output.file": [[12, "module-models.node.output.file"]], "models.node.output.file.csvfile": [[12, "module-models.node.output.file.csvfile"]], "models.node.output.file.writeedf": [[12, "module-models.node.output.file.writeedf"]], "fill_type_sample_and_hold (models.node.processing.fill.fill attribute)": [[13, "models.node.processing.fill.Fill.FILL_TYPE_SAMPLE_AND_HOLD"]], "fill_type_sample_and_hold (models.node.processing.synchronize.synchronize attribute)": [[13, "models.node.processing.synchronize.Synchronize.FILL_TYPE_SAMPLE_AND_HOLD"]], "fill_type_zerofill (models.node.processing.fill.fill attribute)": [[13, "models.node.processing.fill.Fill.FILL_TYPE_ZEROFILL"]], "fill_type_zerofill (models.node.processing.synchronize.synchronize attribute)": [[13, "models.node.processing.synchronize.Synchronize.FILL_TYPE_ZEROFILL"]], "fill (class in models.node.processing.fill)": [[13, "models.node.processing.fill.Fill"]], "input_main (models.node.processing.fill.fill attribute)": [[13, "models.node.processing.fill.Fill.INPUT_MAIN"]], "input_main (models.node.processing.signalcheck.signalcheck attribute)": [[13, "models.node.processing.signalcheck.SignalCheck.INPUT_MAIN"]], "input_master_main (models.node.processing.synchronize.synchronize attribute)": [[13, "models.node.processing.synchronize.Synchronize.INPUT_MASTER_MAIN"]], "input_master_timestamp (models.node.processing.synchronize.synchronize attribute)": [[13, "models.node.processing.synchronize.Synchronize.INPUT_MASTER_TIMESTAMP"]], "input_slave_main (models.node.processing.synchronize.synchronize attribute)": [[13, "models.node.processing.synchronize.Synchronize.INPUT_SLAVE_MAIN"]], "input_slave_timestamp (models.node.processing.synchronize.synchronize attribute)": [[13, "models.node.processing.synchronize.Synchronize.INPUT_SLAVE_TIMESTAMP"]], "merge (class in models.node.processing.merge)": [[13, "models.node.processing.merge.Merge"]], "output_main (models.node.processing.fill.fill attribute)": [[13, "models.node.processing.fill.Fill.OUTPUT_MAIN"]], "output_main (models.node.processing.signalcheck.signalcheck attribute)": [[13, "models.node.processing.signalcheck.SignalCheck.OUTPUT_MAIN"]], "output_merged_main (models.node.processing.merge.merge attribute)": [[13, "models.node.processing.merge.Merge.OUTPUT_MERGED_MAIN"]], "output_merged_timestamp (models.node.processing.merge.merge attribute)": [[13, "models.node.processing.merge.Merge.OUTPUT_MERGED_TIMESTAMP"]], "output_synchronized_main (models.node.processing.synchronize.synchronize attribute)": [[13, "models.node.processing.synchronize.Synchronize.OUTPUT_SYNCHRONIZED_MAIN"]], "processingnode (class in models.node.processing.processing_node)": [[13, "models.node.processing.processing_node.ProcessingNode"]], "signalcheck (class in models.node.processing.signalcheck)": [[13, "models.node.processing.signalcheck.SignalCheck"]], "synchronize (class in models.node.processing.synchronize)": [[13, "models.node.processing.synchronize.Synchronize"]], "dispose() (models.node.processing.processing_node.processingnode method)": [[13, "models.node.processing.processing_node.ProcessingNode.dispose"]], "models.node.processing": [[13, "module-models.node.processing"]], "models.node.processing.fill": [[13, "module-models.node.processing.fill"]], "models.node.processing.merge": [[13, "module-models.node.processing.merge"]], "models.node.processing.processing_node": [[13, "module-models.node.processing.processing_node"]], "models.node.processing.signalcheck": [[13, "module-models.node.processing.signalcheck"]], "models.node.processing.synchronize": [[13, "module-models.node.processing.synchronize"]], "random() (in module models.node.processing.merge)": [[13, "models.node.processing.merge.random"]], "input_main (models.node.processing.encoder.onehottosingle.onehottosingle attribute)": [[14, "models.node.processing.encoder.onehottosingle.OneHotToSingle.INPUT_MAIN"]], "input_main (models.node.processing.encoder.singletoonehot.singletoonehot attribute)": [[14, "models.node.processing.encoder.singletoonehot.SingleToOneHot.INPUT_MAIN"]], "output_main (models.node.processing.encoder.onehottosingle.onehottosingle attribute)": [[14, "models.node.processing.encoder.onehottosingle.OneHotToSingle.OUTPUT_MAIN"]], "output_main (models.node.processing.encoder.singletoonehot.singletoonehot attribute)": [[14, "models.node.processing.encoder.singletoonehot.SingleToOneHot.OUTPUT_MAIN"]], "onehottosingle (class in models.node.processing.encoder.onehottosingle)": [[14, "models.node.processing.encoder.onehottosingle.OneHotToSingle"]], "singletoonehot (class in models.node.processing.encoder.singletoonehot)": [[14, "models.node.processing.encoder.singletoonehot.SingleToOneHot"]], "models.node.processing.encoder": [[14, "module-models.node.processing.encoder"]], "models.node.processing.encoder.onehottosingle": [[14, "module-models.node.processing.encoder.onehottosingle"]], "models.node.processing.encoder.singletoonehot": [[14, "module-models.node.processing.encoder.singletoonehot"]], "featureextractor (class in models.node.processing.feature_extractor.feature_extractor)": [[15, "models.node.processing.feature_extractor.feature_extractor.FeatureExtractor"]], "from_config_json() (models.node.processing.feature_extractor.feature_extractor.featureextractor class method)": [[15, "models.node.processing.feature_extractor.feature_extractor.FeatureExtractor.from_config_json"]], "models.node.processing.feature_extractor": [[15, "module-models.node.processing.feature_extractor"]], "models.node.processing.feature_extractor.feature_extractor": [[15, "module-models.node.processing.feature_extractor.feature_extractor"]], "bandpass (class in models.node.processing.filter.bandpass)": [[16, "models.node.processing.filter.bandpass.BandPass"]], "filter (class in models.node.processing.filter.filter)": [[16, "models.node.processing.filter.filter.Filter"]], "input_main (models.node.processing.filter.filter.filter attribute)": [[16, "models.node.processing.filter.filter.Filter.INPUT_MAIN"]], "output_main (models.node.processing.filter.filter.filter attribute)": [[16, "models.node.processing.filter.filter.Filter.OUTPUT_MAIN"]], "models.node.processing.filter": [[16, "module-models.node.processing.filter"]], "models.node.processing.filter.bandpass": [[16, "module-models.node.processing.filter.bandpass"]], "models.node.processing.filter.filter": [[16, "module-models.node.processing.filter.filter"]], "fixedwindowsegmenter (class in models.node.processing.segmenter.fixedwindowsegmenter)": [[17, "models.node.processing.segmenter.fixedwindowsegmenter.FixedWindowSegmenter"]], "input_main (models.node.processing.segmenter.segmenter.segmenter attribute)": [[17, "models.node.processing.segmenter.segmenter.Segmenter.INPUT_MAIN"]], "output_main (models.node.processing.segmenter.segmenter.segmenter attribute)": [[17, "models.node.processing.segmenter.segmenter.Segmenter.OUTPUT_MAIN"]], "segmenter (class in models.node.processing.segmenter.segmenter)": [[17, "models.node.processing.segmenter.segmenter.Segmenter"]], "models.node.processing.segmenter": [[17, "module-models.node.processing.segmenter"]], "models.node.processing.segmenter.fixedwindowsegmenter": [[17, "module-models.node.processing.segmenter.fixedwindowsegmenter"]], "models.node.processing.segmenter.segmenter": [[17, "module-models.node.processing.segmenter.segmenter"]], "segment_data() (models.node.processing.segmenter.fixedwindowsegmenter.fixedwindowsegmenter method)": [[17, "models.node.processing.segmenter.fixedwindowsegmenter.FixedWindowSegmenter.segment_data"]], "segment_data() (models.node.processing.segmenter.segmenter.segmenter method)": [[17, "models.node.processing.segmenter.segmenter.Segmenter.segment_data"]], "input_data (models.node.processing.trainable.trainable_processing_node.trainableprocessingnode attribute)": [[18, "models.node.processing.trainable.trainable_processing_node.TrainableProcessingNode.INPUT_DATA"]], "input_label (models.node.processing.trainable.trainable_processing_node.trainableprocessingnode attribute)": [[18, "models.node.processing.trainable.trainable_processing_node.TrainableProcessingNode.INPUT_LABEL"]], "output_main (models.node.processing.trainable.sklearn_compatible_trainable_node.sklearncompatibletrainablenode attribute)": [[18, "models.node.processing.trainable.sklearn_compatible_trainable_node.SKLearnCompatibleTrainableNode.OUTPUT_MAIN"]], "sklearncompatibletrainablenode (class in models.node.processing.trainable.sklearn_compatible_trainable_node)": [[18, "models.node.processing.trainable.sklearn_compatible_trainable_node.SKLearnCompatibleTrainableNode"]], "trainableprocessingnode (class in models.node.processing.trainable.trainable_processing_node)": [[18, "models.node.processing.trainable.trainable_processing_node.TrainableProcessingNode"]], "from_config_json() (models.node.processing.trainable.sklearn_compatible_trainable_node.sklearncompatibletrainablenode class method)": [[18, "models.node.processing.trainable.sklearn_compatible_trainable_node.SKLearnCompatibleTrainableNode.from_config_json"]], "models.node.processing.trainable": [[18, "module-models.node.processing.trainable"]], "models.node.processing.trainable.sklearn_compatible_trainable_node": [[18, "module-models.node.processing.trainable.sklearn_compatible_trainable_node"]], "models.node.processing.trainable.trainable_processing_node": [[18, "module-models.node.processing.trainable.trainable_processing_node"]], "lda (class in models.node.processing.trainable.classifier.lda)": [[19, "models.node.processing.trainable.classifier.lda.LDA"]], "output_probability (models.node.processing.trainable.classifier.sklearn_classifier.sklearnclassifier attribute)": [[19, "models.node.processing.trainable.classifier.sklearn_classifier.SKLearnClassifier.OUTPUT_PROBABILITY"]], "sklearnclassifier (class in models.node.processing.trainable.classifier.sklearn_classifier)": [[19, "models.node.processing.trainable.classifier.sklearn_classifier.SKLearnClassifier"]], "models.node.processing.trainable.classifier": [[19, "module-models.node.processing.trainable.classifier"]], "models.node.processing.trainable.classifier.lda": [[19, "module-models.node.processing.trainable.classifier.lda"]], "models.node.processing.trainable.classifier.sklearn_classifier": [[19, "module-models.node.processing.trainable.classifier.sklearn_classifier"]], "csp (class in models.node.processing.trainable.feature_extractor.csp)": [[20, "models.node.processing.trainable.feature_extractor.csp.CSP"]], "sklearnfeatureextractor (class in models.node.processing.trainable.feature_extractor.sklearn_feature_extractor)": [[20, "models.node.processing.trainable.feature_extractor.sklearn_feature_extractor.SKLearnFeatureExtractor"]], "models.node.processing.trainable.feature_extractor": [[20, "module-models.node.processing.trainable.feature_extractor"]], "models.node.processing.trainable.feature_extractor.csp": [[20, "module-models.node.processing.trainable.feature_extractor.csp"]], "models.node.processing.trainable.feature_extractor.sklearn_feature_extractor": [[20, "module-models.node.processing.trainable.feature_extractor.sklearn_feature_extractor"]], "cue (class in models.utils.cue)": [[21, "models.utils.cue.Cue"]], "duration (class in models.utils.duration)": [[21, "models.utils.duration.Duration"]], "trial (class in models.utils.trial)": [[21, "models.utils.trial.Trial"]], "execute() (models.utils.cue.cue method)": [[21, "models.utils.cue.Cue.execute"]], "from_config_json() (models.utils.cue.cue class method)": [[21, "models.utils.cue.Cue.from_config_json"]], "from_config_json() (models.utils.duration.duration class method)": [[21, "models.utils.duration.Duration.from_config_json"]], "from_config_json() (models.utils.trial.trial class method)": [[21, "models.utils.trial.Trial.from_config_json"]], "get_duration() (models.utils.duration.duration method)": [[21, "models.utils.duration.Duration.get_duration"]], "models.utils": [[21, "module-models.utils"]], "models.utils.cue": [[21, "module-models.utils.cue"]], "models.utils.duration": [[21, "module-models.utils.duration"]], "models.utils.script_execution": [[21, "module-models.utils.script_execution"]], "models.utils.trial": [[21, "module-models.utils.trial"]], "on_stop() (models.utils.trial.trial method)": [[21, "models.utils.trial.Trial.on_stop"]], "script_execute() (in module models.utils.script_execution)": [[21, "models.utils.script_execution.script_execute"]], "start() (models.utils.trial.trial method)": [[21, "models.utils.trial.Trial.start"]]}})